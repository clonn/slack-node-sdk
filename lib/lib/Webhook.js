// Generated by CoffeeScript 1.10.0
var DEFAULT_MAX_ATTEMPTS, DEFAULT_TIMEOUT, Webhook, request;

request = require("requestretry");

DEFAULT_TIMEOUT = 10 * 1000;

DEFAULT_MAX_ATTEMPTS = 3;

Webhook = (function() {
  function Webhook(options) {
    if (options == null) {
      options = {};
    }
    this.options = options;
    this.timeout = DEFAULT_TIMEOUT;
    this.maxAttempts = DEFAULT_MAX_ATTEMPTS;
  }

  Webhook.detectEmoji = function(emoji) {
    var obj;
    obj = {};
    if (!emoji) {
      obj.key = "icon_emoji";
      obj.val = "";
      return obj;
    }
    obj.key = emoji.match(/^http/) ? "icon_url" : "icon_emoji";
    obj.val = emoji;
    return obj;
  };

  Webhook.prototype.respond = function(options, callback) {
    var emoji, payload, text;
    if (typeof options === "object") {
      text = options.text;
    } else {
      text = options;
      options = {};
    }
    emoji = Webhook.detectEmoji(options.icon_emoji || this.options.response_type);
    payload = {
      response_type: options.response_type || this.options.response_type || 'ephemeral',
      channel: options.channel || this.options.channel,
      text: text,
      username: options.username || this.options.username,
      attachments: options.attachments || this.options.attachments,
      link_names: options.link_names || this.options.link_names || 0
    };
    payload[emoji.key] = emoji.val;
    return request({
      method: "POST",
      url: options.url || this.options.url,
      body: JSON.stringify(payload),
      timeout: options.timeout || this.timeout,
      maxAttempts: options.maxAttempts || this.maxAttempts,
      retryDelay: 0
    }, function(err, body, response) {
      if (err != null) {
        return typeof callback === "function" ? callback(err) : void 0;
      }
      return typeof callback === "function" ? callback(null, {
        status: err || response !== "ok" ? "fail" : "ok",
        statusCode: body.statusCode,
        headers: body.headers,
        response: response
      }) : void 0;
    });
  };

  return Webhook;

})();

module.exports = Webhook;
